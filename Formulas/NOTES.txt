Input example: 2 + 3(1-2)
Expected output: -1


POSSIBLE OPERATORS:
+ - addition
- - subtraction
* - multiplication
/ - division
% - modulo
^ - exponent
sq - square root
log - logarithm
ln - natural logarithm



A) PREPARE INPUT FOR FURTHER PARSING
1. Trim all white characters
	2 + 3(1-2)  -->  2+3(1-2)

2. Check for any errors inside an expression

*Operator without number: 
	1 + - 4 * 3

*Number without operator inside an expression:
	3 - 4 8

ONLY exception:
	4(-2 + 3 - 1)	=>	invisible multiplication opetator between
						number and open / closed parenthesis


3. If there is an invisible multiplication operator (a number right
    next to open or closed parenthesis), then add star sign	between them

	2+3(1-2) --> 2+3*(1-2)


A) PARSE PREPARED INPUT

Any character in expression (number, operator, etc) is represented by
object called Token.

Example of parsed expression: 2+3*(1-2)